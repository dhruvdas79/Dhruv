module door_controller(
input clk,
input rst,
input door_close,
input motion,
output reg open,
output reg close);
 typedef enum reg [1:0] {
        IDLE= 2'b00,
        OPENING= 2'b01,
        OPEN= 2'b10,
        CLOSING= 2'b11
    }state;
	state present_state,next_state;
	    reg [2:0] timer;
    always @(posedge clk or posedge rst) begin
        if (rst)
            present_state  <= IDLE;
        else
            present_state<= next_state;
    end
	 always @(posedge clk or posedge rst) begin
        if (rst)
             timer <= 0;
        else if ( present_state == OPEN)
            timer <=  timer + 1;
        else
             timer <= 0;
    end
	always@(*)begin
	case(present_state)
	IDLE:next_state=motion? OPENING:IDLE;
	OPENING:next_state=OPEN;
	OPEN:next_state=(timer==4)? CLOSING: OPEN;
	CLOSING:next_state=door_close? IDLE:CLOSING;
	default:next_state = IDLE;
	endcase
	end
	always @(*) begin
        open= 0;
		close=0;
        case (present_state)
            OPENING:open= 1;
            CLOSING:close= 1;
        endcase
    end

endmodule